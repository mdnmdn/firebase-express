{"version":3,"sources":["../src/server.js"],"names":["inspector","require","open","console","log","url","app","use","json","urlencoded","extended","req","res","next","header","instanceMiddleware","instance","params","schema","endpointURL","get","send","post","body","status"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AAaA;;;;AACA;;;;AAEA;;;;AACA;;;;AAfA,MAAMA,YAAYC,QAAQ,WAAR,CAAlB;AACAD,UAAUE,IAAV;AACAC,QAAQC,GAAR,CAAY,aAAZ,EAA2BJ,UAAUK,GAAV,EAA3B;;AAEA;AACA,MAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAUAJ,IAAIC,GAAJ,CAAQ,UAASI,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BV,UAAQC,GAAR,CAAY,WAAZ;AACA;AACAQ,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAD;AACD,CALD;;AAOA,MAAME,qBAAqB,CAACJ,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7CF,MAAIK,QAAJ,GAAeL,IAAIM,MAAJ,CAAWD,QAAX,IAAuB,SAAtC;AACAb,UAAQC,GAAR,CAAY,YAAZ,EAA0BO,IAAIK,QAA9B;AACAH;AACD,CAJD;;AAMAP,IAAIC,GAAJ,CAAQ,GAAR;AACAD,IAAIC,GAAJ,CAAQ,SAAR,EAAoBQ,kBAApB;AACAT,IAAIC,GAAJ,CAAQ,mBAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,UAAR,EAAoB,qBAAWC,IAAX,EAApB,EAAuC,yCAAe,EAAEU,wBAAF,EAAf,CAAvC;;AAEA;AACAZ,IAAIC,GAAJ,CAAQ,WAAR,EAAqB,0CAAgB,EAAEY,aAAa,UAAf,EAAhB,CAArB;;AAGA;;;;;;;;AAQAb,IAAIc,GAAJ,CAAQ,KAAR,EAAe,CAACT,GAAD,EAAMC,GAAN,KAAc;AAC3BT,UAAQC,GAAR,CAAY,KAAZ;AACAQ,MAAIE,MAAJ,CAAW,OAAX,EAAoB,KAApB;AACAF,MAAIS,IAAJ,CAAS,IAAT;AACD,CAJD;;AAMAf,IAAIgB,IAAJ,CAAS,OAAT,EAAkB,CAACX,GAAD,EAAMC,GAAN,KAAc;AAC9BT,UAAQC,GAAR,CAAYO,IAAIY,IAAhB;AACAX,MAAIS,IAAJ,CAAS,EAACE,MAAMZ,IAAIY,IAAX,EAAT;AACD,CAHD;;AAKAjB,IAAIC,GAAJ,CAAQ,CAACI,GAAD,EAAMC,GAAN,KAAc;AACpBA,MAAIY,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,wBAArB;AACA;AACD,CAHD;;QAOEf,G,GAAAA,G;;AAGF","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\n\nconst inspector = require('inspector');\ninspector.open();\nconsole.log('inspector: ', inspector.url());\n\n// based on https://codeburst.io/express-js-on-cloud-functions-for-firebase-86ed26f9144c\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n\nimport homeController from './controllers/home';\nimport surveyController from './controllers/survey';\n\nimport schema from './graphql/schema';\nimport { inspect } from 'util';\n\n\napp.use(function(req, res, next) {\n  console.log('headers!!');\n  // inject default headers\n  res.header('Access-Control-Allow-Origin', '*');\n  next();\n});\n\nconst instanceMiddleware = (req ,res ,next) => {\n  req.instance = req.params.instance || 'default';\n  console.log('instance: ', req.instance);\n  next(); \n};\n\napp.use('/', homeController);\napp.use('/survey',  instanceMiddleware, surveyController);\napp.use('/:instance/survey', surveyController);\n\n// The GraphQL endpoint\napp.use('/graphql', bodyParser.json(), graphqlExpress({ schema }));\n\n// GraphiQL, a visual editor for queries\napp.use('/graphiql', graphiqlExpress({ endpointURL: '/graphql' }));\n\n\n/*\n(async () => {\n  const a = await dothings();\n  console.log(a);\n\n})();\n*/\n\napp.get(\"/hi\", (req, res) => {\n  console.log('hi!');\n  res.header('X-Wow', 'hi!');\n  res.send(\"hi\");\n});\n\napp.post(\"/post\", (req, res) => {\n  console.log(req.body);\n  res.send({body: req.body});\n});\n\napp.use((req, res) => {\n  res.status(404).send(\"Sorry can't find that!\");\n  //res.redirect('/404.html');\n});\n\n\nexport {\n  app\n};\n\n//exports.app = functions.https.onRequest(app);\n\n"]}