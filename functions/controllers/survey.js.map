{"version":3,"sources":["../../src/controllers/survey.js"],"names":["express","require","api","router","Router","list","req","res","result","instance","params","search","query","active","first","count","forEach","element","questions","send","err","error","messsage","stackTrace","detail","get","surveyId","answers","module","exports"],"mappings":";;;;AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,MAAMD,QAAQ,QAAR,CAAZ;;AAEA,MAAME,SAASH,QAAQI,MAAR,EAAf;;AAEA,MAAMC;AAAA,+BAAO,WAAOC,GAAP,EAAYC,GAAZ,EAAoB;AAC/B,QAAG;AACD,YAAMC,SAAS,MAAMN,IAAIG,IAAJ,CAAS;AAC5BI,kBAAUH,IAAII,MAAJ,CAAWD,QADO;AAE5BE,gBAAQL,IAAIM,KAAJ,CAAUD,MAFU;AAG5BE,gBAAQP,IAAIM,KAAJ,CAAUC,MAHU;AAI5BC,eAAOR,IAAIM,KAAJ,CAAUE,KAAV,IAAmB,CAJE;AAK5BC,eAAOT,IAAIM,KAAJ,CAAUG,KAAV,IAAmB;AALE,OAAT,CAArB;;AAQA;AACAP,aAAOQ,OAAP,CAAe,mBAAW;AACxB,eAAOC,QAAQC,SAAf;AACD,OAFD;;AAKAX,UAAIY,IAAJ,CAASX,MAAT;AACD,KAhBD,CAgBC,OAAMY,GAAN,EAAU;AACPb,UAAIY,IAAJ,CAAS,EAACE,OAAOD,IAAIE,QAAZ,EAAsBC,YAAYH,IAAIG,UAAtC,EAAT;AACH;AACF,GApBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAsBA,MAAMC;AAAA,gCAAS,WAAOlB,GAAP,EAAYC,GAAZ,EAAoB;AACjC,QAAG;AACD,YAAMC,SAAS,MAAMN,IAAIuB,GAAJ,CAAQ;AAC3BhB,kBAAUH,IAAII,MAAJ,CAAWD,QADM;AAE3BiB,kBAAUpB,IAAII,MAAJ,CAAWgB;AAFM,OAAR,CAArB;;AAKAnB,UAAIY,IAAJ,CAASX,MAAT;AACD,KAPD,CAOC,OAAMY,GAAN,EAAU;AACPb,UAAIY,IAAJ,CAAS,EAACE,OAAOD,IAAIE,QAAZ,EAAsBC,YAAYH,IAAIG,UAAtC,EAAT;AACH;AACF,GAXK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAaA,MAAMI;AAAA,gCAAU,WAAOrB,GAAP,EAAYC,GAAZ,EAAoB;AAClC,QAAG;AACD,YAAMC,SAAS,MAAMN,IAAIyB,OAAJ,CAAY;AAC/BlB,kBAAUH,IAAII,MAAJ,CAAWD,QADU;AAE/BiB,kBAAUpB,IAAII,MAAJ,CAAWgB,QAFU;AAG/Bf,gBAAQL,IAAIM,KAAJ,CAAUD,MAHa;AAI/BG,eAAOR,IAAIM,KAAJ,CAAUE,KAAV,IAAmB,CAJK;AAK/BC,eAAOT,IAAIM,KAAJ,CAAUG,KAAV,IAAmB;AALK,OAAZ,CAArB;;AAQA;AACAP,aAAOQ,OAAP,CAAe,mBAAW;AACxB,eAAOC,QAAQC,SAAf;AACD,OAFD;;AAIAX,UAAIY,IAAJ,CAASX,MAAT;AACD,KAfD,CAeC,OAAMY,GAAN,EAAU;AACPb,UAAIY,IAAJ,CAAS,EAACE,OAAOD,IAAIE,QAAZ,EAAsBC,YAAYH,IAAIG,UAAtC,EAAT;AACH;AACF,GAnBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAqBApB,OAAOsB,GAAP,CAAW,OAAX,EAAoBpB,IAApB;AACAF,OAAOsB,GAAP,CAAW,iBAAX,EAA8BpB,IAA9B;;AAEAF,OAAOsB,GAAP,CAAW,mBAAX,EAAgCD,MAAhC;AACArB,OAAOsB,GAAP,CAAW,6BAAX,EAA0CD,MAA1C;;AAEArB,OAAOsB,GAAP,CAAW,2BAAX,EAAwCE,OAAxC;AACAxB,OAAOsB,GAAP,CAAW,qCAAX,EAAkDE,OAAlD;;AAGAxB,OAAOsB,GAAP,CAAW,GAAX;AAAA,gCAAgB,WAAMnB,GAAN,EAAWC,GAAX,EAAqB,CACpC,CADD;;AAAA;AAAA;AAAA;AAAA;;AAGAqB,OAAOC,OAAP,GAAiB1B,MAAjB","file":"survey.js","sourcesContent":["const express = require('express');\nconst api = require('../api');\n\nconst router = express.Router();\n\nconst list = async (req, res) => {\n  try{\n    const result = await api.list({\n      instance: req.params.instance,\n      search: req.query.search,\n      active: req.query.active,\n      first: req.query.first || 0,\n      count: req.query.count || 20,\n    });\n    \n    // fixme: don't use workaround\n    result.forEach(element => {\n      delete element.questions;\n    });\n      \n\n    res.send(result);\n  }catch(err){\n      res.send({error: err.messsage, stackTrace: err.stackTrace});\n  }\n};\n\nconst detail = async (req, res) => {\n  try{\n    const result = await api.get({\n      instance: req.params.instance,\n      surveyId: req.params.surveyId\n    });\n    \n    res.send(result);\n  }catch(err){\n      res.send({error: err.messsage, stackTrace: err.stackTrace});\n  }\n};\n\nconst answers = async (req, res) => {\n  try{\n    const result = await api.answers({\n      instance: req.params.instance,\n      surveyId: req.params.surveyId,\n      search: req.query.search,\n      first: req.query.first || 0,\n      count: req.query.count || 20,\n    });\n    \n    // fixme: don't use workaround\n    result.forEach(element => {\n      delete element.questions;\n    });\n      \n    res.send(result);\n  }catch(err){\n      res.send({error: err.messsage, stackTrace: err.stackTrace});\n  }\n};\n\nrouter.get('/list', list);\nrouter.get('/:instance/list', list);\n\nrouter.get('/detail/:surveyId', detail);\nrouter.get('/:instance/detail/:surveyId', detail);\n\nrouter.get('/detail/:surveyId/answers', answers);\nrouter.get('/:instance/detail/:surveyId/answers', answers);\n\n\nrouter.get('/', async(req, res)   => {\n});\n\nmodule.exports = router; "]}