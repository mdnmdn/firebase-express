{"version":3,"sources":["../../src/tmp/test_data.js"],"names":["express","require","moment","fs","path","l","console","log","bind","app","originalData","answerMap","get","req","res","data","surveys","answers","length","forEach","origSurvey","survey","id","parseInt","Id","name","Name","description","Description","active","Active","questions","Question1","question","Answer1A","Answer1B","Answer1C","push","Question2","Answer2A","Answer2B","Answer2C","Question3","Answer3A","Answer3B","Answer3C","Answers","originalAnswer","answer","UserName","ts","CompilationDate","toISOString","surveyId","Answer1","Answer2","Answer3","writeFileSync","join","__dirname","JSON","stringify","send","listen"],"mappings":"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","file":"test_data.js","sourcesContent":["const express = require('express');\nconst moment = require('moment');\nconst fs = require('fs');\nconst path = require('path');\n\n\nconst l = console.log.bind(console);\n\nconst app = express();\n\nconst originalData = require('../../../../assets/data');\n\nconst answerMap = { 1: 'A', 2: 'B', 3: 'C'};\n\napp.get('/', (req, res) => {\n    const data = {\n        surveys: {},\n        answers: {}, \n    };\n\n    l(`length: ${originalData.length}`);\n\n    originalData.forEach(origSurvey => {\n        const survey = {\n            id: parseInt(origSurvey.Id),\n            name: origSurvey.Name,\n            description: origSurvey.Description,\n            active: origSurvey.Active,\n            questions: [],\n        };\n\n        if (origSurvey.Question1) {\n            const question = {\n                description: origSurvey.Question1,\n                answers: {\n                    'A': origSurvey.Answer1A,\n                    'B': origSurvey.Answer1B,\n                    'C': origSurvey.Answer1C,\n                }\n            }\n            survey.questions.push(question);\n        }\n\n        if (origSurvey.Question2) {\n            const question = {\n                description: origSurvey.Question2,\n                answers: {\n                    'A': origSurvey.Answer2A,\n                    'B': origSurvey.Answer2B,\n                    'C': origSurvey.Answer2C,\n                },\n            }\n            survey.questions.push(question);\n        }\n\n        if (origSurvey.Question3) {\n            const question = {\n                description: origSurvey.Question3,\n                answers: {\n                    'A': origSurvey.Answer3A,\n                    'B': origSurvey.Answer3B,\n                    'C': origSurvey.Answer3C,\n                },\n            }\n            survey.questions.push(question);\n        }\n\n        if (origSurvey.Answers && origSurvey.Answers.length){\n            const answers = {};\n\n            origSurvey.Answers.forEach(originalAnswer => {\n                const answer = {\n                    id: parseInt(originalAnswer.Id),\n                    name: originalAnswer.UserName,\n                    ts: moment(originalAnswer.CompilationDate).toISOString(),\n                    surveyId: survey.id,\n                    answers: [],\n                };\n                \n                if (originalAnswer.Answer1) {\n                    answer.answers[0] = answerMap[originalAnswer.Answer1];\n                }\n\n                if (originalAnswer.Answer2) {\n                    answer.answers[1] = answerMap[originalAnswer.Answer2];\n                }\n\n                if (originalAnswer.Answer3) {\n                    answer.answers[2] = answerMap[originalAnswer.Answer3];\n                }\n\n                answers[answer.id] = answer;\n            });\n\n            data.answers[survey.id] = answers;\n        }\n\n        data.surveys[survey.id] = survey;\n    });\n\n    fs.writeFileSync(\n        path.join(__dirname,'../../data/initialdata.json'),\n        JSON.stringify(data, null, 2)\n    );\n\n    res.send(data);\n});\n\napp.get('/orig', (req, res) => {\n    res.send(originalData);\n});\n\napp.listen(3000, () => console.log('Example app listening on port 3000!'))"]}